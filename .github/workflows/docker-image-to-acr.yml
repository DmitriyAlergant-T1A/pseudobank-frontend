name: Build and Push to Azure Container Registry

on:
  push:
    branches:
      - main

env:   
  REACT_APP_OPENAI_ENDPOINT_SUFFIX: ${{ secrets.REACT_APP_OPENAI_ENDPOINT_SUFFIX }}

jobs:
  Build-and-Push:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_REGISTRY_SP_CREDS }}
      
    - name: Log in to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server:   ${{ vars.AZURE_CONTAINER_REGISTRY_NAME }}.azurecr.io
        username:       ${{ secrets.AZURE_REGISTRY_USERNAME }}
        password:       ${{ secrets.AZURE_REGISTRY_PASSWORD }}

    - name: Check if login was successful
      run: |
        set -e
        docker pull ${{ vars.AZURE_CONTAINER_REGISTRY_NAME }}.azurecr.io/hello-world:latest || echo "Login failed or image does not exist"
    
    - name: Build Docker image
      run: |
        docker build . --build-arg REACT_APP_JUICYSCORE_DATA_API_KEY=${{ secrets.REACT_APP_JUICYSCORE_DATA_API_KEY }} \
            -t ${{ vars.AZURE_CONTAINER_REGISTRY_NAME }}.azurecr.io/pseudobank-frontend:latest \
            --build-arg REACT_APP_OPENAI_ENDPOINT_SUFFIX="${{ env.REACT_APP_OPENAI_ENDPOINT_SUFFIX }}"


        docker push         ${{ vars.AZURE_CONTAINER_REGISTRY_NAME }}.azurecr.io/pseudobank-frontend:latest

    - name: Push Docker image to ACR
      run: |
        docker push         ${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }}/pseudobank-frontend:latest
  
  Update-Container-App:
    needs: Build-and-Push
    runs-on: ubuntu-latest

    steps:
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_REGISTRY_SP_CREDS }}

    - name: Restart a Container App Revision
      run: |
        echo "Listing active revisions for ${{ vars.AZ_CONTAINER_APP_NAME }}..."
        ACTIVE_REVISION=$(az containerapp revision list --name ${{ vars.AZ_CONTAINER_APP_NAME }} --resource-group ${{ vars.AZ_RESOURCE_GROUP }} \
          | jq -r '.[] | select(.properties.active == true) | .name')
        
        echo "Active revision: $ACTIVE_REVISION"
        
        if [ -n "$ACTIVE_REVISION" ]; then
          echo "Restarting active revision $ACTIVE_REVISION..."
          az containerapp revision restart --name ${{ vars.AZ_CONTAINER_APP_NAME }} --resource-group ${{ vars.AZ_RESOURCE_GROUP }} --revision $ACTIVE_REVISION
          echo "$ACTIVE_REVISION restarted successfully."
        else
          echo "No active revision found to restart."
        fi